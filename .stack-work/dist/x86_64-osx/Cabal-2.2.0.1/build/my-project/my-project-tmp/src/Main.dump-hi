
==================== FINAL INTERFACE ====================
2018-11-09 13:46:36.410646 UTC

interface main:Main 8044
  interface hash: 675e3ed5b61880f81cfbad7f0f369037
  ABI hash: d49ad57dffe29d3c576484e75163c946
  export-list hash: a814f349abde79af59aacd2c7c538767
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1858775361564df60dbaec203f6b867e
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.exercise
  Main.greet
  Main.main
  Main.main0
  Main.main1
  Main.maybeMonad
  Main.numbers
  Main.printConfig
  Main.printNumbers
  Main.printTime
module dependencies:
package dependencies: aeson-1.3.1.1 appar-0.1.4 array-0.5.2.0
                      async-2.2.1 attoparsec-0.13.2.2 auto-update-0.1.4 base-4.11.1.0
                      base-compat-0.10.5 binary-0.8.5.1 blaze-builder-0.4.1.0
                      bsb-http-chunked-0.0.0.4 byteorder-1.0.4 bytestring-0.10.8.2
                      case-insensitive-1.2.0.11 containers-0.5.11.0
                      data-default-class-0.1.2.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dlist-0.8.0.5 exceptions-0.10.0 filepath-1.4.2 ghc-boot-th-8.4.4
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 http-date-0.0.8 http-types-0.12.2
                      http2-1.6.4 integer-gmp-1.0.2.0 integer-logarithms-1.0.2.2
                      iproute-1.7.6 monad-control-1.0.2.3 mtl-2.2.2 network-2.6.3.6
                      network-byte-order-0.0.0.0 primitive-0.6.3.0 psqueues-0.2.7.0
                      random-1.1 regex-base-0.93.2 regex-compat-0.95.1 regex-posix-0.95.2
                      resourcet-1.2.2 scientific-0.3.6.2 scotty-0.11.2
                      simple-sendfile-0.2.27 stm-2.4.5.1 streaming-commons-0.2.1.0
                      tagged-0.8.5 template-haskell-2.13.0.0 text-1.2.3.1 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-2.7.2.2 unix-compat-0.5.1
                      unliftio-core-0.1.2.0 unordered-containers-0.2.9.0 uuid-types-1.0.3
                      vault-0.3.1.2 vector-0.12.0.1 wai-3.2.1.2 wai-extra-3.0.24.3
                      warp-3.2.25 word8-0.1.3
orphans: regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         network-2.6.3.6:Network.Socket stm-2.4.5.1:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.1:Data.Text.Lazy
         text-1.2.3.1:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.5:Data.DList ghc-boot-th-8.4.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.4:GHC.LanguageExtensions.Type
                         iproute-1.7.6:Data.IP.Addr iproute-1.7.6:Data.IP.Range
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.2:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.2:Web.Scotty.Internal.Types tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  aeson-1.3.1.1:Data.Aeson eaae3b07ec740ee7e47dbaa91ff71c8b
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 06420d98d10ee04b8dda9c0d88032c55
import  -/  base-4.11.1.0:System.IO e02b6055b5362a3eac04f83991602a53
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  scotty-0.11.2:Web.Scotty 256ededf8776e192bea732b3552e6378
import  -/  time-1.8.0.2:Data.Time f61eb3fcde68af41067af47b14b52c30
import  -/  time-1.8.0.2:Data.Time.Clock.POSIX 3faf40912a67189fa5f3b8252eca7637
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
9689556901ff9f0ab6f0bd32cae97eb2
  exercise :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.exercise1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
65ce0273257ce0c14135f3e58c8f5987
  exercise1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>,
     Unfolding: (\ (n :: GHC.Types.Int)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.exercise2
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case n of ww { GHC.Types.I# ww1 ->
                 letrec {
                   $wloop :: GHC.Prim.Int#
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
                     {- Arity: 2, Strictness: <S,U><S,U>, Inline: [0] -}
                   = \ (ww2 :: GHC.Prim.Int#)
                       (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case GHC.Prim.<=# ww2 0# of lwild {
                       DEFAULT
                       -> case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout
                                 ipv3
                                 GHC.Types.True
                                 w2 of ds { (#,#) ipv4 ipv5 ->
                          case $wloop (GHC.Prim.-# ww2 1#) ipv4 of ds3 { (#,#) ipv6 ipv7 ->
                          (# ipv6, GHC.Types.: @ () ipv5 ipv7 #) } }
                       1# -> (# w2, GHC.Types.[] @ () #) }
                 } in
                 case $wloop ww1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } } }) -}
87cf7a9b05bd684412f0a90d769dab64
  exercise2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.exercise3) -}
2f0fcd620203a452034feb4d00d5c0be
  exercise3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("enter your message"#) -}
6defd6bf54400fda0db3b3b27cd84b63
  greet :: [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (name :: [GHC.Types.Char]) ->
                 GHC.CString.unpackAppendCString#
                   Main.greet2
                   (GHC.Base.build
                      @ GHC.Types.Char
                      (\ @ b
                         (c :: GHC.Types.Char -> b -> b)[OneShot]
                         (n :: b)[OneShot] ->
                       GHC.Base.foldr
                         @ GHC.Types.Char
                         @ b
                         c
                         (GHC.CString.unpackFoldrCString# @ b Main.greet1 c n)
                         name))) -}
99ff1d31cd8b5620283c92aee64afac4
  greet1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("!"#) -}
164dab1404bc0ebb57fd30a9552b142d
  greet2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Hello "#) -}
707569d8e914e609ea8dd4b780f03d6b
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main2 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
276fae9120200ccd17ea27c4d2901fa1
  main0 :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main6 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
6937c2437f9c2b222590bafd452aeca8
  main1 :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main29 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7db8158d436be12e765d727037b47fdb
  main10 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main15 Main.main11) -}
9670cf0accf15f06c85901e4c44495a1
  main11 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Int Main.main14 Main.main12) -}
3f4a4e8a237d50d5d22e03ac33ae8cca
  main12 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.main13
                   (GHC.Types.[] @ GHC.Types.Int)) -}
7f97adb76a242ded0741ad6d2407b3d0
  main13 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
17c638d3b0a0df7e7f9a63a2e2b43266
  main14 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
cf2027bf406a03f4dcd88c91d2d00fb6
  main15 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
edb324493511bf6a3dd56622dd2c8a88
  main16 ::
    [GHC.Types.Int]
    -> forall r.
       Data.ByteString.Builder.Internal.BuildStep r
       -> Data.ByteString.Builder.Internal.BufferRange
       -> GHC.Prim.State# GHC.Prim.RealWorld
       -> (# GHC.Prim.State# GHC.Prim.RealWorld,
             Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><L,U(U,U)><S,U> -}
f896f97fe5079143f885bf9993a3e6ca
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.main18
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   ipv3
                   GHC.Types.True
                   ipv2 } }) -}
f293a7e7b9511c41dd358e9cb8850040
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main19) -}
938890300c982aac594a3f22d3f7f580
  main19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("stack.yaml"#) -}
6828c2c7d044ac770ecf7846f4abd3c3
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main3
                   GHC.Types.True) -}
e10d84f501f3d82cb6628a185e34e1a5
  main20 :: GHC.Base.String
  {- Unfolding: (case GHC.Show.$w$cshowsPrec4
                        0#
                        Main.main21
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
606933fbf4183149ecc2329ae3c2e93c
  main21 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (7) -}
6a1336e491a9cc3e48480018760d4e53
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Main.greet2
                   Main.main23) -}
056269f092851e2d27c476700ba5f452
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.CString.unpackCString# Main.main25)
                   Main.main24) -}
6fa354d91e437b96266113f8ff9b0244
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.greet1) -}
360397312ab822f838a91ed7b3a7c67b
  main25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("world"#) -}
52be211dab928fa7a8bc6b79f40cfbb0
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   Main.greet2
                   Main.main27) -}
7674ae99b720c2da6f23e8e583b0502c
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.CString.unpackCString# Main.main28)
                   Main.main24) -}
b34fc5f86e160876a33358e5ebf3d863
  main28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("oscar"#) -}
0f03bb60c937cfc1f8f75ef4a3788c90
  main29 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Main.main30 ipv1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.List.$w!! @ GHC.Base.String ipv3 0#)
                   GHC.Types.True
                   ipv2 } }) -}
771039a918e589168a1bdcaf3a709b82
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main4) -}
97a81e7116df07d255e16b7c52425c1b
  main30 ::
    [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Base.String] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
67cfaec2c642e0d50ac93731b3a818ed
  main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Starting server ..."#) -}
110739025a20e60bcd0d1b96211cbe66
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main2 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
be2c4c5fabeb7b1589f7a77a211a50ea
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main26
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main22
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main20
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Main.main17 ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main7
                   GHC.Types.True
                   ipv6 } } } }) -}
a2d73137ce3e24b919c13863c7eeabc7
  main7 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.$fShow(,)3
                   Main.main8) -}
46b9fd3edc9770a6742123d3dcd37c52
  main8 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   (Data.ByteString.Lazy.Internal.unpackChars
                      (Data.ByteString.Builder.toLazyByteString
                         Main.main9
                           `cast`
                         ((forall (r :: <*>_N).
                           <Data.ByteString.Builder.Internal.BuildStep r>_R
                           ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <Data.ByteString.Builder.Internal.BuildSignal
                                            r>_R)) ; Sym (Data.ByteString.Builder.Internal.N:Builder[0]))))
                   Data.ByteString.Lazy.Internal.$fShowByteString2) -}
5aa24e90f1485c3f3b0e3a62ac37438e
  main9 ::
    Data.ByteString.Builder.Internal.BuildStep r
    -> Data.ByteString.Builder.Internal.BufferRange
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,U)))><S(SS),1*U(U,U)><S,U>,
     Unfolding: (\ @ r
                   (x :: Data.ByteString.Builder.Internal.BuildStep r)
                   (eta :: Data.ByteString.Builder.Internal.BufferRange)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case eta of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                 let {
                   x1 :: Data.ByteString.Builder.Internal.BufferRange
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                               Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 2 -}
                   = Data.Aeson.Encoding.Internal.closeBracket1 @ r x
                 } in
                 let {
                   lvl :: Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Data.ByteString.Builder.Internal.BuildSignal r #)
                     {- Arity: 2, Strictness: <S(SL),1*U(U,U)><S,U> -}
                   = \ (ds :: Data.ByteString.Builder.Internal.BufferRange)
                       (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case ds of wild { Data.ByteString.Builder.Internal.BufferRange dt dt1 ->
                     case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Int#
                                                           -> GHC.Prim.Addr#
                                                           -> GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 GHC.Prim.Addr# #)}
                            1#
                            dt
                            eta2 of wild1 { (#,#) ds7 ds8 ->
                     Main.main16
                       Main.main10
                       @ r
                       x1
                         `cast`
                       (<Data.ByteString.Builder.Internal.BufferRange>_R
                        ->_R Sym (GHC.Types.N:IO[0]
                                      <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                       (Data.ByteString.Builder.Internal.BufferRange ds8 dt1)
                       ds7 } }
                 } in
                 case GHC.Prim.<# (GHC.Prim.minusAddr# ww2 ww1) 1# of lwild {
                   DEFAULT
                   -> case GHC.Prim.writeWord8OffAddr#
                             @ GHC.Prim.RealWorld
                             ww1
                             0#
                             91##
                             eta1 of s2 { DEFAULT ->
                      let {
                        ww4 :: GHC.Prim.Addr# = GHC.Prim.plusAddr# ww1 1#
                      } in
                      case GHC.Prim.<# (GHC.Prim.minusAddr# ww2 ww4) 20# of lwild1 {
                        DEFAULT
                        -> case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Int#
                                                                 -> GHC.Prim.Addr#
                                                                 -> GHC.Prim.State#
                                                                      GHC.Prim.RealWorld
                                                                 -> (# GHC.Prim.State#
                                                                         GHC.Prim.RealWorld,
                                                                       GHC.Prim.Addr# #)}
                                  1#
                                  ww4
                                  s2 of wild { (#,#) ds7 ds8 ->
                           Main.main16
                             Main.main10
                             @ r
                             x1
                               `cast`
                             (<Data.ByteString.Builder.Internal.BufferRange>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                             (Data.ByteString.Builder.Internal.BufferRange ds8 ww2)
                             ds7 }
                        1#
                        -> (# s2,
                              Data.ByteString.Builder.Internal.BufferFull
                                @ r
                                20#
                                ww4
                                lvl
                                  `cast`
                                (<Data.ByteString.Builder.Internal.BufferRange>_R
                                 ->_R Sym (GHC.Types.N:IO[0]
                                               <Data.ByteString.Builder.Internal.BuildSignal
                                                  r>_R)) #) } }
                   1#
                   -> (# eta1,
                         Data.ByteString.Builder.Internal.BufferFull
                           @ r
                           1#
                           ww1
                           (\ (ds :: Data.ByteString.Builder.Internal.BufferRange)
                              (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                            case ds of wild { Data.ByteString.Builder.Internal.BufferRange dt dt1 ->
                            case GHC.Prim.writeWord8OffAddr#
                                   @ GHC.Prim.RealWorld
                                   dt
                                   0#
                                   91##
                                   eta2 of s2 { DEFAULT ->
                            let {
                              ww4 :: GHC.Prim.Addr# = GHC.Prim.plusAddr# dt 1#
                            } in
                            case GHC.Prim.<# (GHC.Prim.minusAddr# dt1 ww4) 20# of lwild1 {
                              DEFAULT
                              -> case {__pkg_ccall bytestring-0.10.8.2 GHC.Prim.Int#
                                                                       -> GHC.Prim.Addr#
                                                                       -> GHC.Prim.State#
                                                                            GHC.Prim.RealWorld
                                                                       -> (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             GHC.Prim.Addr# #)}
                                        1#
                                        ww4
                                        s2 of wild1 { (#,#) ds7 ds8 ->
                                 Main.main16
                                   Main.main10
                                   @ r
                                   x1
                                     `cast`
                                   (<Data.ByteString.Builder.Internal.BufferRange>_R
                                    ->_R Sym (GHC.Types.N:IO[0]
                                                  <Data.ByteString.Builder.Internal.BuildSignal
                                                     r>_R))
                                   (Data.ByteString.Builder.Internal.BufferRange ds8 dt1)
                                   ds7 }
                              1#
                              -> (# s2,
                                    Data.ByteString.Builder.Internal.BufferFull
                                      @ r
                                      20#
                                      ww4
                                      lvl
                                        `cast`
                                      (<Data.ByteString.Builder.Internal.BufferRange>_R
                                       ->_R Sym (GHC.Types.N:IO[0]
                                                     <Data.ByteString.Builder.Internal.BuildSignal
                                                        r>_R)) #) } } })
                             `cast`
                           (<Data.ByteString.Builder.Internal.BufferRange>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <Data.ByteString.Builder.Internal.BuildSignal
                                             r>_R)) #) } }) -}
78868cdc53ed4b0abf524b49354dfc6a
  maybeMonad :: GHC.Base.Maybe GHC.Types.Int
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just @ GHC.Types.Int Main.maybeMonad1) -}
316e4efecaa4d10ac9798b6dfaf5ea6a
  maybeMonad1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
18b376ca3671769300e4e80acf30c3b9
  numbers :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Main.numbers1
                   Main.main10) -}
1d4b82997d48bbb0382b22e0da3ea3fb
  numbers1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
780ebcf9378894772556b25ed5781c74
  printConfig :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main17 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1082d5b41b2561f386225d43e5b48d7f
  printNumbers :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.printNumbers1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
7a59c93b0bbb7b014e75c9b8410b12d7
  printNumbers1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main20
                   GHC.Types.True) -}
e5190b683aa1ba79152a0c94128ddb61
  printTime :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.printTime1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c45c236d32bf9dc52da79e9e96f6c5ad
  printTime1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Data.Time.Clock.POSIX.getCurrentTime1
                        s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (Data.Time.LocalTime.Internal.ZonedTime.$fShowUTCTime_$cshow ipv1)
                   GHC.Types.True
                   ipv }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

